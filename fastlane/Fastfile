default_platform(:ios)

platform :android do
  desc "Submit to Firebase App Distribution"
  lane :push_firebase_release do
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      apk_path: 'android/app/build/outputs/apk/release/app-release.apk',
      groups: 'unlitter-usa-testers',
      service_credentials_file: ENV["FIREBASE_LOGIN_CREDENTIALS"]
    )
  end

  desc "Bump version code Android"
  lane :bump_version_android do
    increment_version_code(
      gradle_file_path: "android/app/build.gradle"
    )
  end
  desc "Bump version number Android"
  lane :version_number do |options|
    increment_version_name(
      version_name: options[:CODE],
      gradle_file_path: "android/app/build.gradle"
    )
  end
end

platform :ios do
  desc 'Increment version number to AppStore'
  lane :version_number do |options|
    increment_version_number(
      version_number: options[:CODE],
      xcodeproj: ENV['XCODEPROJ_PATH']
    )
  end
  desc 'Increments patch build version'
  lane :build_version do
    increment_build_number(
      xcodeproj: ENV['XCODEPROJ_PATH']
    )
  end

  desc "Push a new build to Testflight"
  lane :push_testflight_release do |options|
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'],
      is_key_content_base64: true,
    )
    ipa_path = ENV['APP_IPA_PATH']
    upload_to_testflight(
      api_key: api_key,
      submit_beta_review: false,
      ipa: ipa_path,
      skip_waiting_for_build_processing: true,
      changelog: options[:CHANGELOG_TESTFLIGHT],
    )
  end

  desc "Push a new build to App Store"
  lane :push_appstore_release do
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'],
      is_key_content_base64: true,
      in_house: true,
    )
    ipa_path = ENV['APP_IPA_PATH']

    upload_to_app_store(
      api_key: api_key,
      submit_for_review: true,
      force: true,
      ipa: ipa_path,
      precheck_include_in_app_purchases: false,
      metadata_path: 'fastlane/metadata',
      skip_screenshots: true,
      app_rating_config_path: 'fastlane/assets/rating_config.json',
      submission_information: {
        add_id_info_limits_tracking: true,
        add_id_info_serves_ads: true,
        add_id_info_tracks_action: true,
        add_id_info_tracks_install: true,
        add_id_info_uses_idfa: true,
        content_rights_has_rights: false,
        content_rights_contains_third_party_content: false,
        export_compliance_platform: 'ios',
        export_compliance_compliance_required: false,
        export_compliance_encryption_updated: false,
        export_compliance_app_type: nil,
        export_compliance_uses_encryption: false,
        export_compliance_is_exempt: false,
        export_compliance_contains_third_party_cryptography: false,
        export_compliance_contains_proprietary_cryptography: false,
        export_compliance_available_on_french_store: false
      }
    )
  end


  desc "Match mobile provision"
  lane :match_mobileprovision do
    setup_ci if ENV['CI']
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'],
      is_key_content_base64: true,
    )

    match(
      type: 'appstore',
      app_identifier: ENV['APP_IDENTIFIER'],
      api_key: api_key,
      readonly: false,
      storage_mode: "git",
      git_url: ENV['GIT_URL'],
      username: ENV['GIT_USERNAME'],
      git_private_key: ENV['GIT_PRIVATE_KEY']
    )
  end
  
  desc "Build new .ipa file"
  lane :beta do |options|
    setup_ci if ENV['CI']
    api_key = app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
      key_content: ENV['APP_STORE_CONNECT_API_KEY_CONTENT'],
      is_key_content_base64: true,
    )

    match(
      type: 'appstore',
      app_identifier: ENV['APP_IDENTIFIER'],
      api_key: api_key,
      readonly: false,
      storage_mode: "git",
      git_url: ENV['GIT_URL'],
      username: ENV['GIT_USERNAME'],
      git_private_key: ENV['GIT_PRIVATE_KEY']
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      path: ENV['XCODEPROJ_PATH'],
      code_sign_identity: ENV['CODE_SIGN_IDENTITY']
    )

    update_project_provisioning(
      xcodeproj: ENV['XCODEPROJ_PATH'],
      profile: options[:PROVISIONING_PROFILE_PATH],
    )
    
    update_project_team(
      path: ENV['XCODEPROJ_PATH'],
      teamid: ENV['IOS_TEAM_ID']
    )
    build_app(
      configuration: "Release",
      scheme: ENV['XCODE_SCHEMA'],
      archive_path: ENV['XARCHIVE_PATH'],
      workspace: ENV['XWORKSPACE_PATH'],
      export_method: 'app-store',
      export_team_id: ENV['IOS_TEAM_ID'],
    )
  end
end
