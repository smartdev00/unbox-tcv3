name: Sign, Build and Publish App

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - develop
    types:
      - closed

jobs:
  bump_version:
    name: Bump build version
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    permissions:
      contents: read
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_PRIVATE_KEY }}
      - name: Clean Gemfile.lock
        id: clean_gemfile
        run: |
          rm -rf Gemfile.lock
      - name: Setup Ruby (bundle)
        id: ruby_setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true
      - name: Git config global
        id: git_config
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - name: Bundle Install
        id: bundle_install
        run: |
          bundle lock --add-platform x86_64-darwin-19
          bundle install
      - name: Bump version Android
        id: bump_version_android
        run: |
          npm version patch --git-tag-version false
          bundle exec fastlane android version_patch
          bundle exec fastlane android bump_version_android
      - name: Bump version iOS
        id: bump_version_ios
        env:
          XCODEPROJ_PATH: "ios/the-click-3.xcodeproj"
        run: |
          bundle exec fastlane ios build_version
      - name: Commit bump version changes
        id: bump_commit
        if: steps.bump_version_ios.conclusion == 'success'
        run: |
          git status
          git add .
          git commit -m "[skip ci] bump build number"
          git push origin ${{ github.ref }}
  build_android_aab:
    name: Build Android AAB
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_PRIVATE_KEY }}
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "gradle"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Node  
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Git Update and install dependencies
        run: |
          git pull origin ${{ github.ref }}
          yarn install
          sudo apt-get install -y libxml2-utils
      - name: Generate Signing Keystore
        id: generate_signing_keystore_aab
        env:
          GOOGLE_KEY_ALIAS: ${{ secrets.GOOGLE_KEYSTORE_ALIAS }}
          GOOGLE_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_KEYSTORE_PASSWORD }}
        run: |
          echo "${{ secrets.GOOGLE_KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/app/google-release-key.jks
      - name: Add Google service for chraslytic report
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}" | base64 --decode > android/app/google-services.json
          ls -lah android/app
      - name: Sign aab file
        env:
          GOOGLE_KEYSTORE_ALIAS: ${{ secrets.GOOGLE_KEYSTORE_ALIAS }}
          GOOGLE_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_KEYSTORE_PASSWORD }}
        run: |
          cd android && ./gradlew bundleRelease -PkeyLocation=google-release-key.jks -PstorePw=$GOOGLE_KEYSTORE_PASSWORD -PkeyAlias=$GOOGLE_KEYSTORE_ALIAS -PkeyPw=$GOOGLE_KEYSTORE_PASSWORD && cd ..
          mkdir android/build-aab
          cp android/app/build/outputs/bundle/release/app-release.aab android/build-aab/app-release.aab
      - name: Upload aab Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.aab
          path: android/build-aab/
  build_android_apk:
    name: Build Android APK
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_PRIVATE_KEY }}
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "gradle"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Node  
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Git Update and install dependencies
        run: |
          git pull origin ${{ github.ref }}
          yarn install
          sudo apt-get install -y libxml2-utils
      - name: Generate Signing Keystore
        id: generate_signing_keystore
        env:
          GOOGLE_KEY_ALIAS: ${{ secrets.GOOGLE_KEYSTORE_ALIAS }}
          GOOGLE_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_KEYSTORE_PASSWORD }}
        run: |
          echo "${{ secrets.GOOGLE_KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/app/google-release-key.jks
      - name: Add Google service for chraslytic report
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}" | base64 --decode > android/app/google-services.json
          ls -lah android/app
      - name: Sign clean and Build android release apk
        env:
          GOOGLE_KEYSTORE_ALIAS: ${{ secrets.GOOGLE_KEYSTORE_ALIAS }}
          GOOGLE_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_KEYSTORE_PASSWORD }}
        run: |
          cd android && ./gradlew assembleRelease -PkeyLocation=google-release-key.jks -PstorePw=$GOOGLE_KEYSTORE_PASSWORD -PkeyAlias=$GOOGLE_KEYSTORE_ALIAS -PkeyPw=$GOOGLE_KEYSTORE_PASSWORD && cd ..
      - name: Upload apk Artifact
        uses: actions/upload-artifact@v1
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
  build_ios_ipa:
    name: Build iOS .ipa
    runs-on: macos-latest
    needs: bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.GIT_PRIVATE_KEY }}
      - name: add SSH key
        id: add_ssh_key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.GIT_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          sudo chmod 400 ~/.ssh/id_rsa
          sudo chmod 400 ~/.ssh/id_rsa.pub
      - name: Install dependencies
        run: |
          git pull origin ${{ github.ref }}
          yarn install --network-timeout 300000
      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Setup Ruby (bundle)
        id: ruby_setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true
      - name: Build ipa for FOSTPLUS
        if: github.ref == 'refs/heads/main'
        id: build_ipa_fastlane_production
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID_PRODUCTION }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID_PRODUCTION }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT_PRODUCTION }}
          GIT_PRIVATE_KEY: ${{ secrets.GIT_PRIVATE_KEY }}
          IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID_PRODUCTION }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          GIT_URL: "git@github.com:Unbox-infinity/fastlane_match-unlitter-usa.git"
          APP_IDENTIFIER: "be.fostplus.theclick"
          XCODEPROJ_PATH: "ios/the-click-3.xcodeproj"
          XARCHIVE_PATH: "ios/the-click-3.xcarchive"
          XWORKSPACE_PATH: "ios/the-click-3.xcworkspace"
          XCODE_SCHEMA: "the-click-3"
          GIT_USERNAME: "yunan.fatah@unboxuniverse.com"
          CODE_SIGN_IDENTITY: "Apple Distribution: NBX (${{ secrets.IOS_TEAM_ID_PRODUCTION }})"
        run: |
          bundle lock --add-platform x86_64-darwin-19
          bundle install
          bundle exec fastlane run update_app_identitifer xcodeproj:"ios/the-click-3.xcodeproj" app_identifier:"be.fostplus.theclick" plist_path:"/Users/runner/work/app-native-the-click-v3/app-native-the-click-v3/ios/the-click-3/Info.plist"
          bundle exec fastlane ios match_mobileprovision
          ls -lah /Users/runner/Library/MobileDevice/Provisioning\ Profiles
          ls -AU ~/Library/MobileDevice/Provisioning\ Profiles | head -1
          echo "$(security find-identity -p codesigning -v | head -1)"
          gem install ffi -v '1.14.0' && cd ios && arch -x86_64 pod install --repo-update && cd ..
          ls -lah ios && yarn build:ios && ls -lah ios
          bundle exec fastlane beta PROVISIONING_PROFILE_PATH:"/Users/runner/Library/MobileDevice/Provisioning Profiles/$(ls -AU ~/Library/MobileDevice/Provisioning\ Profiles | head -1)"
          mkdir ios/build-ipa
          cp /Users/runner/work/app-native-the-click-v3/app-native-the-click-v3/the-click-3.ipa ios/build-ipa/the-click-3.ipa
      - name: Build ipa for Internal
        if: github.base_ref == 'develop'
        id: build_ipa_fastlane
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          GIT_PRIVATE_KEY: ${{ secrets.GIT_PRIVATE_KEY }}
          IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          GIT_URL: "git@github.com:Unbox-infinity/fastlane_match-unlitter-usa.git"
          APP_IDENTIFIER: "com.unbox.theclick.v3"
          XCODEPROJ_PATH: "ios/the-click-3.xcodeproj"
          XARCHIVE_PATH: "ios/the-click-3.xcarchive"
          XWORKSPACE_PATH: "ios/the-click-3.xcworkspace"
          XCODE_SCHEMA: "the-click-3"
          GIT_USERNAME: "yunan.fatah@unboxuniverse.com"
          CODE_SIGN_IDENTITY: "Apple Distribution: NBX (${{ secrets.IOS_TEAM_ID }})"
        run: |
          bundle lock --add-platform x86_64-darwin-19
          bundle install
          bundle exec fastlane ios match_mobileprovision
          ls -lah /Users/runner/Library/MobileDevice/Provisioning\ Profiles
          ls -AU ~/Library/MobileDevice/Provisioning\ Profiles | head -1
          echo "$(security find-identity -p codesigning -v | head -1)"
          gem install ffi -v '1.14.0' && cd ios && arch -x86_64 pod install --repo-update && cd ..
          ls -lah ios && yarn build:ios && ls -lah ios
          bundle exec fastlane beta PROVISIONING_PROFILE_PATH:"/Users/runner/Library/MobileDevice/Provisioning Profiles/$(ls -AU ~/Library/MobileDevice/Provisioning\ Profiles | head -1)"
          mkdir ios/build-ipa
          cp /Users/runner/work/app-native-the-click-v3/app-native-the-click-v3/the-click-3.ipa ios/build-ipa/the-click-3.ipa
      - name: Save .ipa to artifact
        uses: actions/upload-artifact@v3
        id: save_ipa_artifact
        with:
          name: the-click-3.ipa
          path: ios/build-ipa/
  deploy_testflight:
    name: Testflight Deployment
    needs: build_ios_ipa
    if: github.base_ref == 'develop'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: the-click-3.ipa
          path: ios/build-ipa/
      - name: Setup Ruby (bundle)
        id: ruby_setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true
      - name: Deploy to Testflight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}
          APP_IPA_PATH: ios/build-ipa/the-click-3.ipa
        run: |
          bundle install
          bundle exec fastlane push_testflight_release CHANGELOG_TESTFLIGHT:"$(cat fastlane/metadata/changelog.txt)"
  deploy_appstore:
    name: AppStore Deployment
    needs: build_ios_ipa
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: the-click-3.ipa
          path: ios/build-ipa/
      - name: Setup Ruby (bundle)
        id: ruby_setup
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.5
          bundler-cache: true
      - name: Deploy to AppStore
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID_PRODUCTION }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID_PRODUCTION }}
          APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT_PRODUCTION }}
          APP_IPA_PATH: ios/build-ipa/the-click-3.ipa
        run: |
          bundle install
          bundle exec fastlane push_appstore_release
